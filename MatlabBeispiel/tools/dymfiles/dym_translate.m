function dym_translate(model)
% dym_translate - translate Modelica model
%
% dym_translate(model) translates the Modelica model <model> with Dymola
% and generates the simulation executable <model>.exe.
% Dymola must be able to find the <model> starting from the
% current directory, otherwise an error occurs.
%
% All utility files of Dymola generated during this process are removed.
%
% See also: dym_getInitial, dym_simulate, dym_browseResult
%
% Release Notes:
% - July 15, 2004 by Martin Otter, DLR:
%   Changed such that also Modelica models in libraries can be translated
%
% - October 24, 2003 by Klaus Schnepper, DLR:
%   Remove Windows specifics and make operable on UNIX
%
% Copyright (C) 2000-2006 DLR (Germany).
%    All rights reserved.


% Print info message
  dym_disp( ['... Translate Modelica model "', model, '"'] );

% ... check for PC-System
  PC = ispc;

% Name of executable to be generated
  if PC
    modelExe = [model, '.exe'];
    dymosimExe = 'dymosim.exe';
    renameCmd = 'rename';
  else
    modelExe = model;
    dymosimExe = 'dymosim';
    renameCmd = 'mv';
  end

  logfile = 'dymolalg.txt';

% Utility files generated by Dymola
  dymolaFiles = {logfile       , ...
                 'buildlog.txt', ...
                 'dsfinal.txt' , ...
                 'dsin.txt'    , ...
                 'dslog.txt'   , ...
                 'dsmodel.c'   , ...
                 dymosimExe    , ...
                 'request'     , ...
                 'status'      , ...
                 'success'     , ...
                 [model, '.mof']};

% Remove all utility files which are eventually present from Dymola.
  dym_deleteFiles( {dymolaFiles{:}, modelExe} );

  if PC
%   Start Dymola
    dym_DymolaStart;

%   Translate Modelica model
    dym_DymolaCommand(['translateModel("', model, '")'] );

%   Check whether translation was successful
    if ~dym_existFile( dymosimExe )
       dym_error(['Error when translating Modelica model "', model, '".']);
    end

%   Exit Dymola
    dym_DymolaCommand('exit');
  else
    dym_UnixTranslate(model,logfile);
  end

% Rename executable
  command = ['!',renameCmd,' ',dymosimExe,' ', modelExe];
  eval(command);

% Check whether executable exists
  if dym_existFile( modelExe )
     dym_disp( ['... Simulation executable "', modelExe, '" successfully generated.'] );

     % Delete all utility files;
       dym_deleteFiles(dymolaFiles);
  else
     dym_error( ['... Simulation executable "', modelExe, '" could not be generated.'] );
  end
